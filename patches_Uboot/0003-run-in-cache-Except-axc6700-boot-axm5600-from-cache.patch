From 60466cd34cf87d048113cc6f094e25c2c1fc18a7 Mon Sep 17 00:00:00 2001
From: Marek Bykowski <marek.bykowski@gmail.com>
Date: Sun, 11 Mar 2018 10:08:45 -0500
Subject: [PATCH 03/13] run in cache: Except axc6700 boot axm5600 from cache.

Except adding support for axm56xx booting from cache
fix the linker script for the memory reservation for
the page tables in SPL.

Signed-off-by: Marek Bykowski <marek.bykowski@gmail.com>
---
 arch/arm/cpu/armv8/cache_v8.c       | 12 ++++++++++--
 board/axxia/axc6700/u-boot-spl.lds  |  2 +-
 board/axxia/axm5600/u-boot-spl.lds  | 16 ++++++++--------
 board/axxia/common/spl.c            |  7 ++++---
 common/board_f.c                    |  8 ++++----
 include/configs/axm5600.h           |  2 +-
 scripts/build_uboot_run_in_cache.sh | 22 +++++++++++++++-------
 7 files changed, 43 insertions(+), 26 deletions(-)

diff --git a/arch/arm/cpu/armv8/cache_v8.c b/arch/arm/cpu/armv8/cache_v8.c
index 1b42d2842b..e4a39d6617 100644
--- a/arch/arm/cpu/armv8/cache_v8.c
+++ b/arch/arm/cpu/armv8/cache_v8.c
@@ -86,6 +86,14 @@ void mmu_configure(u64 *addr, int flags)
 	u64 *page_table = addr, i, j;
 	int el, tcr_flags;
 	uint32_t sctlr = get_sctlr();;
+    	
+
+	/* TODO: In the Proof-Of-Concept for Nokia the memory is attributed 
+       to non-shareble but booting from cache should work
+	   equally well with memory attributed to inner-shareable (Default in this Uboot) 
+	   with Fully Coherent Master Devices (Cluseters) NOT being part of
+	   Snoop Domain. 
+	 */
 
 	/* Setup an identity-mapping for all spaces */
 	for (i = 0; i < (PGTABLE_SIZE >> 3); i++) {
@@ -109,9 +117,9 @@ void mmu_configure(u64 *addr, int flags)
        isn't worth the time as this is for Nokia that runs
        Uboot 2017 with page granule 4K.
 
-	   LSM sits in between the start end of below.
+	   LSM sits in between the start-end of below.
      */
-#if 0
+#if ATTRIBUTE_LSM_TO_MEMORY_NC
 	start = 0x8020000000;
 	end = 0x8040000000;
 	for (j = start >> SECTION_SHIFT;
diff --git a/board/axxia/axc6700/u-boot-spl.lds b/board/axxia/axc6700/u-boot-spl.lds
index e4faa9cf3a..f9d9f2f194 100644
--- a/board/axxia/axc6700/u-boot-spl.lds
+++ b/board/axxia/axc6700/u-boot-spl.lds
@@ -49,7 +49,7 @@ __bss_end = .;
 __page_tables : 
 {
 	_pgt_start = .;
-	*(__page_tables)
+	. += 0x10000;
 	_pgt_end = .;
 }
 .dynsym _image_binary_end : { *(.dynsym) }
diff --git a/board/axxia/axm5600/u-boot-spl.lds b/board/axxia/axm5600/u-boot-spl.lds
index 1f23190e00..f9d9f2f194 100644
--- a/board/axxia/axm5600/u-boot-spl.lds
+++ b/board/axxia/axm5600/u-boot-spl.lds
@@ -15,14 +15,6 @@ arch/arm/cpu/armv8/start.o (.text*)
 __monitor_parameters = .;
 . += 256;
 
-/*
-	Include the secure monitor.
-*/
-. = ALIGN(4096);
-_bl31_start = .;
-KEEP(bl31.o (.monitor*))
-_bl31_end = .;
-
 *(.text*)
 }
 . = ALIGN(4);
@@ -52,6 +44,14 @@ __bss_start = .;
 . = ALIGN(4);
 __bss_end = .;
 }
+
+. = ALIGN(0x10000);
+__page_tables : 
+{
+	_pgt_start = .;
+	. += 0x10000;
+	_pgt_end = .;
+}
 .dynsym _image_binary_end : { *(.dynsym) }
 .dynbss : { *(.dynbss) }
 .dynstr : { *(.dynstr*) }
diff --git a/board/axxia/common/spl.c b/board/axxia/common/spl.c
index e21710307e..1223ea01dd 100755
--- a/board/axxia/common/spl.c
+++ b/board/axxia/common/spl.c
@@ -1723,8 +1723,8 @@ board_init_f(ulong dummy)
 			"ldr x25, [x24]\n");
 
 		/*
-		   Do not enformce HW coherency.
-		   Rely soley on SW CMO.
+		   Do not enforce HW coherency.
+		   Rely soley on SW Cache Maintenance Operations.
 		 */
 #if 0
 		if (0 != set_cluster_coherency(1, 1))
@@ -1741,7 +1741,8 @@ board_init_f(ulong dummy)
 		   Cache with 4K step granule */
 		pt_walk(0ULL, (uint64_t)16 * SZ_1G);
 		pt_walk(DICKENS, 8);
-		pt_walk(0x8001000000ULL, 8);
+		/* TODO: I probably should remove this:
+		pt_walk(0x8001000000ULL, 8);*/
 		pt_walk(UART0_ADDRESS, 8);
 		pt_walk(AXXIA_USB0_BASE, 8);
 		pt_walk(LSM, SZ_256K);
diff --git a/common/board_f.c b/common/board_f.c
index 2fd9168374..56da4a9522 100644
--- a/common/board_f.c
+++ b/common/board_f.c
@@ -845,23 +845,23 @@ int switch_to_EL2_non_secure(void)
 	axxia_configuration->baud_rate = gd->baudrate;
 
 	/*
-	   Move monitor to LSM+0x1000, '0x1000' is a so called page boundery
+	   Move monitor to LSM+0x1000, '0x1000' (4K) is a so called page boundery
        though this is not true for Axxia's Uboot (2015) where pages are 512M.
-	   It is true for Nokia's Uboot (2017) though.
+	   It is true for Nokia's Uboot (2017) though, where pages are 4K.
 	 */
 	memmove((void*) LSM+0x1000, (void*)&_bl31_start,
 			(size_t)(&_bl31_end) - (size_t)(&_bl31_start));
 	entry = (void (*)(void *, void *))(LSM+0x1000);
 	cleanup_before_linux();
 	asm volatile (
-		"str x18, [sp, #-8]!\n" /* Store global data to the stack */
+		"str x18, [sp, #-8]!\n" /* Push global data to the stack */
 		"mov x22, sp\n"  /* Migrate SP */
 		"msr sp_el2, x22\n"
 		"mrs x22, vbar_el3\n" /* Migrate VBAR */
 		"msr vbar_el2, x22\n"
 	);
 	entry(NULL, axxia_configuration);
-	asm volatile("ldr x18, [sp], #8\n"); /*Restore global data from the stack */
+	asm volatile("ldr x18, [sp], #8\n"); /* Pop global data from the stack */
 
 	/*
 	   We are now at EL2, non-secure state.
diff --git a/include/configs/axm5600.h b/include/configs/axm5600.h
index 6703473236..8af9cccb88 100644
--- a/include/configs/axm5600.h
+++ b/include/configs/axm5600.h
@@ -276,7 +276,7 @@
   ==============================================================================
 */
 
-/*#define SYSCACHE_ONLY_MODE*/
+#define SYSCACHE_ONLY_MODE
 
 #define AXXIA_OR_IN_FUSE_FORCE
 
diff --git a/scripts/build_uboot_run_in_cache.sh b/scripts/build_uboot_run_in_cache.sh
index c8bd9e663e..df6d0c9041 100755
--- a/scripts/build_uboot_run_in_cache.sh
+++ b/scripts/build_uboot_run_in_cache.sh
@@ -1,14 +1,16 @@
 #!/bin/bash
 
+set -x
+
 #Mareks ATF and Uboot
 ATF_DIR=/workspace/sw/mbykowsx/lionfish/axxia_atf_private
 UBOOT_DIR=/workspace/sw/mbykowsx/lionfish/axxia_u-boot_private
-ATF_DIR=
-UBOOT_DIR=
+#ATF_DIR=
+#UBOOT_DIR=
 MKIMAGE=${UBOOT_DIR}/tools/mkimage
 
-test -n "$ATF_DIR" || { echo "Give ATF directory"; exit 0; }
-test -n "$UBOOT_DIR" || { echo "Give Uboot directory"; exit 0; }
+test -n "$ATF_DIR" || { echo "Tell me ATF directory"; exit -1; }
+test -n "$UBOOT_DIR" || { echo "Tell me Uboot directory"; exit -1; }
 
 atf_nokia() {
 		echo "Building atf"
@@ -48,12 +50,12 @@ uboot_nokia() {
                 $MKIMAGE -A arm64 -T firmware -C none -a 0 -e 0x00197001 -n XLOADER -d spl/u-boot-spl.bin spl/u-boot-spl.img
                 $MKIMAGE -A arm64 -T firmware -C none -a 0 -e 0 -n XLOADER -d u-boot.bin u-boot.img
 
-: << EOM
+#: << EOM
 tftp aus-labsrv2 << TFTP
 put u-boot.img mbu-boot.img
 put spl/u-boot-spl.img mbu-boot-spl.img
 TFTP
-EOM
+#EOM
 
         else
                return 127
@@ -64,4 +66,10 @@ EOM
 
 }
 
-atf_nokia AXC6700 && uboot_nokia axc6700
+if [[ $1 == AXC6700 || $1 == axc6700 ]]; then
+	atf_nokia AXC6700 && uboot_nokia axc6700
+elif [[  $1 == AXM5600 || $1 == axm5600 ]]; then
+	atf_nokia AXM5600 && uboot_nokia axm5600
+else 
+	echo "Unsupported architecture. Give AXC6700 or AXM5600"
+fi
-- 
2.16.2

